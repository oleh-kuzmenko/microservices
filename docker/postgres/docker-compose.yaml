version: '3.9'

services:

  app-manager:
    image: app-manager:0.0.1
    container_name: app-manager
    healthcheck:
      test: "curl -f http://localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - 8071:8071
    environment:
      - KAFKA_HOST=kafka
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      microservices:
    deploy:
      resources:
        limits:
          memory: 700M

  accounts:
    image: accounts:0.0.1
    container_name: accounts
    ports:
      - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - ACCOUNTS_DB_HOST=microservices_db
      - CONFIG_SERVER_URI=http://app-manager:8071
      - KAFKA_HOST=kafka
    depends_on:
      app-manager:
        condition: service_healthy
    networks:
      microservices:
    deploy:
      resources:
        limits:
          memory: 700M

  loans:
    image: loans:0.0.1
    container_name: loans
    ports:
      - 8090:8090
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - LOANS_DB_HOST=microservices_db
      - CONFIG_SERVER_URI=http://app-manager:8071
      - KAFKA_HOST=kafka
    depends_on:
      app-manager:
        condition: service_healthy
    networks:
      microservices:
    deploy:
      resources:
        limits:
          memory: 700M

  cards:
    image: cards:0.0.1
    container_name: cards
    ports:
      - 9000:9000
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - CARDS_DB_HOST=microservices_db
      - CONFIG_SERVER_URI=http://app-manager:8071
      - KAFKA_HOST=kafka
    depends_on:
      app-manager:
        condition: service_healthy
    networks:
      microservices:
    deploy:
      resources:
        limits:
          memory: 700M

  db:
    image: postgres:14-alpine
    container_name: microservices_db
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=pass
    volumes:
      - ./create_dbs.sql:/docker-entrypoint-initdb.d/create_dbs.sql:ro
    networks:
      microservices:
    deploy:
      resources:
        limits:
          memory: 700M

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list" ]
      interval: 5s
      retries: 10
    ports:
      - 9092:9092
    environment:
      KAFKA_KRAFT_MODE: 'true'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@localhost:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    networks:
      microservices:
    deploy:
      resources:
        limits:
          memory: 700M

networks:
  microservices:
    driver: bridge